rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
rankCluster::max_T(n, data_n, cont = c_mat, theta = theta, alpha = 0.05)$reject
stat
crit
crit = mvtnorm::qmvt(alpha/2, tail = "upper.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
crit = mvtnorm::qmvt(alpha/2, tail = "upper.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
crit = mvtnorm::qmvt(alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
crit
stat
max(abs(stat)) > crit
1-mvtnorm::pmvt(upper=abs(stat), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
1-mvtnorm::pmvt(upper=max(abs(stat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
1-mvtnorm::pmvt(lower = -Inf, upper=max(abs(stat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
stat
crit
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F)
max(abs(stat)) > crit
# sigma_est
# Q_Wald
# Q_Anova
# max_t
replicate(1000, expr = {
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
c(1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F),
max(abs(stat)) > crit)
})
# sigma_est
# Q_Wald
# Q_Anova
# max_t
abb = replicate(1000, expr = {
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
c(1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F),
max(abs(stat)) > crit)
})
abb
ab[2,]
abb[2,]
which(abb[2,] == 1)
abb2 = which(abb[2,] == 1)
abb1 = which(abb[1,] <= 0.05)
abb1
length(abb1)
length(abb2)
abb1 = which(abb[1,] <= 0.025)
length(abb1)
length(intersect(abb1, abb2))
devtools::install_github("spruenke/rankCluster")
library(rankCluster)
ab = replicate(1000, expr = {
data_b = rankCluster::h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
# f_theta_p(c(0.2, 0.4), data_n)
# f_theta_p2(c(0.2, 0.4), data_n)
# if(is.null(psi)){
#   psi = list()
#   for(i in 1:length(data_n)){
#     psi[[i]] = round(rep(1 / length(data_n[[i]]), length(data_n[[i]])), 7)
#   }
# }
c(rankCluster::max_T(sizes[[1]], data_b, cont=c_mat, alpha = 0.05)$reject,
rankCluster::max_T2(sizes[[1]], data_b, cont = c_mat, alpha = 0.05)$reject)
})
rowMeans(ab)
abb = replicate(1000, expr = {
data_n = h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
pnull = 0.5
alpha = 0.05
n = sizes[[1]]
sig = rankCluster::sigma_est(n, data_n, theta)
phat = rankCluster::rel_eff(data_n, theta)
Rhat = cov2cor(sig)
R_c  = cov2cor(c_mat%*%sig%*%t(c_mat))
stat = sqrt(rankCluster::g(n)) * (phat - pnull) / sqrt(diag(sig))
crit = mvtnorm::qmvt(1-alpha/2, tail = "lower.tail", df = rankCluster::g(n) - 1, corr = Rhat)$quantile
c(1-mvtnorm::pmvt(upper=rep(max(abs(stat)), nrow(Rhat)), df = rankCluster::g(n) - 1, corr = Rhat, keepAttr = F),
max(abs(stat)) > crit)
})
abb1 = which(abb[1,] <= alpha/2)
abb2 = which(abb[2,] == T)
all(abb1 == abb2)
devtools::install_github("spruenke/rankCluster")
library(rankCluster)
microbenchmark::microbenchmark(rankCluster::max_T(sizes[[1]], data_n, cont=c_mat, alpha = 0.05)$reject,
rankCluster::max_T2(sizes[[1]], data_n, cont = c_mat, alpha = 0.05)$reject)
ab = replicate(1000, expr = {
data_b = rankCluster::h_0_f(sizes[[1]], sizes[[2]], dist = dist_c, corstruct = "independent", rho = settings$rho[z], params = dist_params)
# f_theta_p(c(0.2, 0.4), data_n)
# f_theta_p2(c(0.2, 0.4), data_n)
# if(is.null(psi)){
#   psi = list()
#   for(i in 1:length(data_n)){
#     psi[[i]] = round(rep(1 / length(data_n[[i]]), length(data_n[[i]])), 7)
#   }
# }
c(rankCluster::max_T(sizes[[1]], data_b, cont=c_mat, alpha = 0.05)$reject,
rankCluster::max_T2(sizes[[1]], data_b, cont = c_mat, alpha = 0.05)$reject)
})
rowMeans(ab)

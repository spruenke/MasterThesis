pt(0.13, 16)
1 - pt(0.13, 16)
1 - pt(0.13, 16) + pt(-0.13, 16)
(1 - pt(0.13, 16)) * 2
t.test(x[1,], x[,2], var.equal = T)
t.test(x[1,], x[2,], var.equal = T)
devtools::install_github("spruenke/rankCluster")
library(rankCluster)
# number of Samples nn = 3, 5, 10, 25
# Identical Sample Size n_i = 3, 5, 10, 15, 25, 50, 100, 1000
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
# One Large, One Small Sample n_i = 10, 15, 25, 50; n_j = 3; n_k = 150
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
## no groups max 5
## min number cluster 8
# number of samples
nn = c(2, 3, 4, 5)
each_s = c(F, T)
both_s = c(F, T)
# Identical Sample Sizes --------------------------------------------------
n_i = c(12, 15, 20)
# Identical Cluster Size
m_ij = c(3, 5, 10, 15)
nm_1 = expand.grid(nn, n_i, m_ij)
nm_1$each_s = F
nm_1$both_s = F
nm_1$identical_s = T
nm_1$identical_c = T
nm_1$grp = 1
colnames(nm_1)[1:3] = c("nn", "n_i", "m_ij")
# Large/Small Cluster
m_ij = c(5, 10)
nm_2 = expand.grid(nn, n_i, m_ij, each_s, both_s)
nm_2$identical_s = T
nm_2$identical_c = F
colnames(nm_2)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
# Remove invalid condition
#nm_2 = nm_2[-which(which(nm_2$each_s == T) %in% which(nm_2$both_s == F)),]
nm_2$grp = 2
# Large/Small Sample Size -------------------------------------------------
n_i = c(12, 15, 20)
# Identical Cluster Size
m_ij = c(3, 5, 10, 15)
nm_3 = expand.grid(nn, n_i, m_ij)
nm_3$each_s = F
nm_3$both_s = F
nm_3$identical_s = F
nm_3$identical_c = T
nm_3$grp = 3
colnames(nm_3)[1:3] = c("nn", "n_i", "m_ij")
# Large/Small Cluster
m_ij = c(5, 10)
nm_4 = expand.grid(nn, n_i, m_ij, each_s, both_s)
nm_4$identical_s = F
nm_4$identical_c = F
colnames(nm_4)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
#nm_4 = nm_4[-which(which(nm_4$each_s == T) %in% which(nm_4$both_s == F)),]
nm_4$grp = 4
# Bind --------------------------------------------------------------------
samples = rbind(nm_1, nm_2, nm_3, nm_4)
rem_ind = intersect(which(samples$each_s == T), which(samples$both_s ==F))
samples = samples[-rem_ind,]
rm(nm_1, nm_2, nm_3, nm_4, both_s, each_s, m_ij, n_i, nn)
# number of Samples nn = 3, 5, 10, 25
# Identical Sample Size n_i = 3, 5, 10, 15, 25, 50, 100, 1000
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
# One Large, One Small Sample n_i = 10, 15, 25, 50; n_j = 3; n_k = 150
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
# number of samples
# nn = c(3, 5, 10)
# each_s = c(F, T)
# both_s = c(F, T)
#
# # Identical Sample Sizes --------------------------------------------------
#     n_i = c(3, 5, 10, 15, 25)
#
#   # Identical Cluster Size
#
#       m_ij = c(3, 5, 10, 15)
#       nm_1 = expand.grid(nn, n_i, m_ij)
#       nm_1$each_s = F
#       nm_1$both_s = F
#       nm_1$identical_s = T
#       nm_1$identical_c = T
#       nm_1$grp = 1
#       colnames(nm_1)[1:3] = c("nn", "n_i", "m_ij")
#
#   # Large/Small Cluster
#       m_ij = c(5, 10)
#       nm_2 = expand.grid(nn, n_i, m_ij, each_s, both_s)
#       nm_2$identical_s = T
#       nm_2$identical_c = F
#       colnames(nm_2)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
#       # Remove invalid condition
#       #nm_2 = nm_2[-which(which(nm_2$each_s == T) %in% which(nm_2$both_s == F)),]
#       nm_2$grp = 2
#
#
# # Large/Small Sample Size -------------------------------------------------
#
#     n_i = c(5, 10, 15)
#
#   # Identical Cluster Size
#
#       m_ij = c(3, 5, 10, 15)
#       nm_3 = expand.grid(nn, n_i, m_ij)
#       nm_3$each_s = F
#       nm_3$both_s = F
#       nm_3$identical_s = F
#       nm_3$identical_c = T
#       nm_3$grp = 3
#       colnames(nm_3)[1:3] = c("nn", "n_i", "m_ij")
#
#   # Large/Small Cluster
#       m_ij = c(5, 10)
#       nm_4 = expand.grid(nn, n_i, m_ij, each_s, both_s)
#       nm_4$identical_s = F
#       nm_4$identical_c = F
#       colnames(nm_4)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
#       #nm_4 = nm_4[-which(which(nm_4$each_s == T) %in% which(nm_4$both_s == F)),]
#       nm_4$grp = 4
#
#
# # Bind --------------------------------------------------------------------
#
#     samples = rbind(nm_1, nm_2, nm_3, nm_4)
#       rem_ind = intersect(which(samples$each_s == T), which(samples$both_s ==F))
#
#       samples = samples[-rem_ind,]
#
# rm(nm_1, nm_2, nm_3, nm_4, both_s, each_s, m_ij, n_i, nn)
sets = samples[81,]
sizes = nm_gen(sets$nn, sets$n_i, sets$m_ij, sets$each_s, sets$both_s, sets$identical_s, sets$identical_c)
dat_test = h_0_f(sizes[[1]], sizes[[2]])
w_test = weight_fun(dat_test)
w_test
w_test = weight_fun(dat_test, "weighted")
w_test
dat_test
sapply(dat_test, FUN = function(x){
length(x) / sum(sapply(dat_test, length))
})
length(dat_test[[1]])
rm(list = ls())
library(car)
library(ggplot2)
setwd("D:/Dropbox/Studium/M.Sc. Statistics/Semester IV/Thesis/Code/MasterThesis")
load("norm_results.RData")
# No Correlation
no_cor = results[[1]]
# grp 1, 2, 3, 4
no_cor_1 = subset(no_cor, grp == 1)
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald), subset = (n_i == 12))
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald), subset = .(n_i == 12))
library(plyr)
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald), subset = .(n_i == 12))
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2), group = n_i)  +
geom_line(aes(x = m_ij, y = wald), subset = .(n_i == 12))
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald, group = n_i))
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald, group = n_i, colour = n_i))
p1
unique(no_cor$n_i)
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald, colour = n_i))
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald), colour = n_i))
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald), color = n_i)
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_line(aes(x = m_ij, y = wald), color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_point(aes(x = m_ij, y = wald))#, color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_point(aes(x = m_ij, y = wald, colour = n_i))#, color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn = 2))  +
geom_point(aes(x = m_ij, y = wald, colour = as.factor(n_i)))#, color = "n_i")
p1
subset(no_cor_1, nn = 2)
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_point(aes(x = m_ij, y = wald, colour = as.factor(n_i)))#, color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i)))#, color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i), lwd = 2))#, color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i)), lwd = 2)#, color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i)), lwd = 1.5)#, color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i)))#, color = "n_i")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
scale_y_continuous(name = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
scale_colour_continuous(name = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
scale_colour_discrete(name = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
scale_colour_discrete(name = "Sample Size")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
scale_colour_discrete(name = "Sample Size") +
labels(name = "test")
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
scale_colour_discrete(name = "Sample Size") +
labs(name = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = 3)+
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = 3)+
scale_linetype_discrete() +
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = 3)+
scale_linetype_discrete(name = "test2") +
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i), linetype = 3))+
scale_linetype_discrete(name = "test2") +
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i), linetype = "dashed"))+
scale_linetype_discrete(name = "test2") +
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i), linetype = "dashed"))+
scale_y_discrete(name = "linetype") +
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_y_discrete(name = "linetype") +
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_continuous(legend = T)
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(legend = T)
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete() +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_manual(values = c("Wald" = "solid", "ANOVA" = "dashed")) +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_manual(values = c("Wald" = "solid", "ANOVA" = 2)) +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_manual(values = c("Wald" = 1, "ANOVA" = 2)) +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i)), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_manual(values = c("Wald" = 1, "ANOVA" = 2)) +
scale_fill_manual(labels = c("Wald", "Anova"), breaks = c("Wald", "Anova")) +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i), linetype = "dashed"), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_manual(values = c("Wald" = 1, "ANOVA" = 2)) +
scale_fill_manual(labels = c("Wald", "Anova"), breaks = c("Wald", "Anova")) +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i), linetype = "dashed"), linetype = "dashed")+
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_1, nn == 2))  +
geom_line(aes(x = m_ij, y = wald, colour = as.factor(n_i))) +
geom_line(aes(x = m_ij, y = anv, colour = as.factor(n_i), linetype = "dashed", group = "Anova"))+
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
no_cor_11 = as.data.frame(rbind(no_cor_1[,c(1:3)], no_cor_1[,c(1:3)], no_cor_1[,c(1:3)]))
no_cor_11$val = val
no_cor_11$typ = rep(c("Wald", "ANOVA", "MCTP"), each = 48)
val = c(no_cor_1$wald, no_cor_1$anv, no_cor_1$maxt)
no_cor_11$val = val
no_cor_11$typ = rep(c("Wald", "ANOVA", "MCTP"), each = 48)
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title = "test")
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title = "test", x = "Clustersize", y = "Type-I error")
p1
#set.seed(512)
#x1 = rnorm(7, mean = 100, sd = 20)
#x1 = round(x1, 2)
#x1
#cat(noquote(paste0("$", x1, "$&")))
a = gsub("&", ",", c("$106.22$& $77.57$& $101.96$& $77.05$& $94.45$& $56.8$& $97.57$"))
b = gsub("$", "", x = a, fixed = T)
d = strsplit(b, ",")[[1]]
x1 = as.numeric(d)
x_bar = round(mean(x1), 2)
x_bar
a = gsub("&", ",", c("$15.07$& $12.41$& $10.16$& $11.85$& $9.62$"))
b = gsub("$", "", x = a, fixed = T)
d = strsplit(b, ",")[[1]]
x1 = as.numeric(d)
x_bar = round(mean(x1), 2)
x_bar
x_bar
x_bar
var_emp = round(sum((x1 - x_bar)^2) / 4, 2)
sd_emp = round(sqrt(var_emp), 2)
se = round(sd_emp/ sqrt(5), 2)
t_stat = (x_bar - 30) / se
t_stat
a = gsub("&", ",", c("$106.22$& $77.57$& $101.96$& $77.05$& $94.45$& $56.8$& $97.57$"))
b = gsub("$", "", x = a, fixed = T)
d = strsplit(b, ",")[[1]]
x1 = as.numeric(d)
x_bar = round(mean(x1), 2)
x_bar
x1
x_bar = round(mean(x1), 2)
var_emp = round(sum((x1 - x_bar)^2) / 6, 2)
var_emp
sd_emp = round(sqrt(var_emp), 2)
sd_emp
se = round(sd_emp/ sqrt(7), 2)
se
# conf_int
cat(paste0(x_bar, " - ", round(qt(0.975, 6), 2), " \\cdot ",  se, ";", x_bar, " + ", round(qt(0.975, 6), 2), " \\cdot ", se))
cat(paste0(x_bar - round(qt(0.975, 6), 2) *   se, "; ", x_bar + round(qt(0.975, 6), 2) * se))
t_stat = (x_bar - 100) / se
t_stat
se
2 * (1 - pt(1.9, 6))
2 * (1 - pt(-1.9, 6))
pt(-1.9, 6)
pt(-1.9, 6) * 2
a = gsub("&", ",", c("$15.07$& $12.41$& $10.16$& $11.85$& $9.62$"))
b = gsub("$", "", x = a, fixed = T)
d = strsplit(b, ",")[[1]]
x1 = as.numeric(d)
x_bar = round(mean(x1), 2)
var_emp = round(sum((x1 - x_bar)^2) / 4, 2)
sd_emp = round(sqrt(var_emp), 2)
se = round(sd_emp/ sqrt(5), 2)
# conf_int
cat(paste0(x_bar, " - ", round(qt(0.975, 4), 2), " \\cdot ",  se, ";", x_bar, " + ", round(qt(0.975, 4), 2), " \\cdot ", se))
cat(paste0(x_bar - round(qt(0.975, 4), 2) *   se, "; ", x_bar + round(qt(0.975, 4), 2) * se))
t_stat = (x_bar - 30) / se
t_stat
2 * pt(-18.94, 4)
0.00004577

samples = rbind(nm_1, nm_2, nm_3, nm_4)
rem_ind = intersect(which(samples$each_s == T), which(samples$both_s ==F))
samples = samples[-rem_ind,]
rm(nm_1, nm_2, nm_3, nm_4, both_s, each_s, m_ij, n_i, nn)
# number of Samples nn = 3, 5, 10, 25
# Identical Sample Size n_i = 3, 5, 10, 15, 25, 50, 100, 1000
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
# One Large, One Small Sample n_i = 10, 15, 25, 50; n_j = 3; n_k = 150
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
# number of samples
# nn = c(3, 5, 10)
# each_s = c(F, T)
# both_s = c(F, T)
#
# # Identical Sample Sizes --------------------------------------------------
#     n_i = c(3, 5, 10, 15, 25)
#
#   # Identical Cluster Size
#
#       m_ij = c(3, 5, 10, 15)
#       nm_1 = expand.grid(nn, n_i, m_ij)
#       nm_1$each_s = F
#       nm_1$both_s = F
#       nm_1$identical_s = T
#       nm_1$identical_c = T
#       nm_1$grp = 1
#       colnames(nm_1)[1:3] = c("nn", "n_i", "m_ij")
#
#   # Large/Small Cluster
#       m_ij = c(5, 10)
#       nm_2 = expand.grid(nn, n_i, m_ij, each_s, both_s)
#       nm_2$identical_s = T
#       nm_2$identical_c = F
#       colnames(nm_2)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
#       # Remove invalid condition
#       #nm_2 = nm_2[-which(which(nm_2$each_s == T) %in% which(nm_2$both_s == F)),]
#       nm_2$grp = 2
#
#
# # Large/Small Sample Size -------------------------------------------------
#
#     n_i = c(5, 10, 15)
#
#   # Identical Cluster Size
#
#       m_ij = c(3, 5, 10, 15)
#       nm_3 = expand.grid(nn, n_i, m_ij)
#       nm_3$each_s = F
#       nm_3$both_s = F
#       nm_3$identical_s = F
#       nm_3$identical_c = T
#       nm_3$grp = 3
#       colnames(nm_3)[1:3] = c("nn", "n_i", "m_ij")
#
#   # Large/Small Cluster
#       m_ij = c(5, 10)
#       nm_4 = expand.grid(nn, n_i, m_ij, each_s, both_s)
#       nm_4$identical_s = F
#       nm_4$identical_c = F
#       colnames(nm_4)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
#       #nm_4 = nm_4[-which(which(nm_4$each_s == T) %in% which(nm_4$both_s == F)),]
#       nm_4$grp = 4
#
#
# # Bind --------------------------------------------------------------------
#
#     samples = rbind(nm_1, nm_2, nm_3, nm_4)
#       rem_ind = intersect(which(samples$each_s == T), which(samples$both_s ==F))
#
#       samples = samples[-rem_ind,]
#
# rm(nm_1, nm_2, nm_3, nm_4, both_s, each_s, m_ij, n_i, nn)
sets = samples[81,]
sizes = nm_gen(sets$nn, sets$n_i, sets$m_ij, sets$each_s, sets$both_s, sets$identical_s, sets$identical_c)
dat_test = h_0_f(sizes[[1]], sizes[[2]])
w_test = weight_fun(dat_test)
w_test
w_test = weight_fun(dat_test, "weighted")
w_test
dat_test
sapply(dat_test, FUN = function(x){
length(x) / sum(sapply(dat_test, length))
})
length(dat_test[[1]])
setwd("~/")
setwd("D:/Dropbox/Studium/M.Sc. Statistics/Semester IV/Thesis/Code/MasterThesis")
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title = "test", x = "Clustersize", y = "Type-I error")
rm(list = ls())
library(car)
library(ggplot2)
load("norm_results.RData")
# No Correlation
no_cor = results[[1]]
# grp 1, 2, 3, 4
no_cor_1 = subset(no_cor, grp == 1)
val = c(no_cor_1$wald, no_cor_1$anv, no_cor_1$maxt)
no_cor_11 = as.data.frame(rbind(no_cor_1[,c(1:3)], no_cor_1[,c(1:3)], no_cor_1[,c(1:3)]))
no_cor_11$val = val
no_cor_11$typ = rep(c("Wald", "ANOVA", "MCTP"), each = nrow(no_cor_1))
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title = "test", x = "Clustersize", y = "Type-I error")
# Wald, ANOVA, max-T
p1
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title = paste0("Type-I Error for ", nn, " samples"), x = "Clustersize", y = "Type-I error")
no_cor_11
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title = paste0("Type-I Error for ", data$nn, " samples"), x = "Clustersize", y = "Type-I error")
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 2 samples", x = "Clustersize", y = "Type-I error")
p1
library(gridExtra)
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 2 samples", x = "Clustersize", y = "Type-I error")
p2 = ggplot(data = subset(no_cor_11, nn == 3))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 3 samples", x = "Clustersize", y = "Type-I error")
p3 = ggplot(data = subset(no_cor_11, nn == 4))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 4 samples", x = "Clustersize", y = "Type-I error")
p4 = ggplot(data = subset(no_cor_11, nn == 5))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ)) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 5 samples", x = "Clustersize", y = "Type-I error")
grid.arrange(p1, p2, p3, p4)
p1
p2
p3
p4
grid.arrange(p1, p2, p3, p4)
install.packages("cowplot")
library(cowplot)
get_legend(p1)
print(get_legend(p1))
grid.draw(get_legend(p1))
ggplot(data = subset(no_cor11, nn==2), aes(x = m_ij, colour = as.factor(n_i), linetype = typ)) + geom_line()
ggplot(data = subset(no_cor_11, nn==2), aes(x = m_ij, colour = as.factor(n_i), linetype = typ)) + geom_line()
ggplot(data = subset(no_cor_11, nn==2), aes(x = m_ij, colour = as.factor(n_i), linetype = typ)) + geom_bar()
ggplot(data = subset(no_cor_11, nn==2), aes(colour = as.factor(n_i), linetype = typ)) + geom_bar()
ggplot(data = subset(no_cor_11, nn==2), aes(colour = as.factor(n_i), linetype = typ)) + geom_line()
ggplot(data = subset(no_cor_11, nn==2), aes(x = m_ij,colour = as.factor(n_i), linetype = typ)) + geom_line()
ggplot(data = subset(no_cor_11, nn==2), aes(x = m_ij, y= val, colour = as.factor(n_i), linetype = typ)) + geom_line()
ggarrange(p1, p2, p3, p4, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
library(ggpubr)
ggarrange(p1, p2, p3, p4, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
?ggarrange
ggarrange(p1, p2, p3, p4, ncol=2, nrow=2, common.legend = TRUE, legend="right")
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 2 samples", x = "Clustersize", y = "Type-I error")
p1
p1 = ggplot(data = subset(no_cor_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 2 samples", x = "Clustersize", y = "Type-I error")
p2 = ggplot(data = subset(no_cor_11, nn == 3))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 3 samples", x = "Clustersize", y = "Type-I error")
p3 = ggplot(data = subset(no_cor_11, nn == 4))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 4 samples", x = "Clustersize", y = "Type-I error")
p4 = ggplot(data = subset(no_cor_11, nn == 5))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 5 samples", x = "Clustersize", y = "Type-I error")
p_nocor_11 = ggarrange(p1, p2, p3, p4, ncol=2, nrow=2, common.legend = TRUE, legend="right")
p_nocor_11
A = list(p_nocor_11)
print(A[[1]])
a = list(rnorm(10), rnorm(10), rnorm(10))
b = list(rpois(3), rpois(3), rpois(3))
b = list(rpois(3,3), rpois(3,3 ), rpois(3,3))
c(a, b)
expand.grid(dists, grps)
dists = c("norm", "pois", "beta", "binom")
grps = c(1:4)
expand.grid(dists, grps)
?expand.grid
expand.grid(grps, dists, stringsAsFactors = F)
res_sets = expand.grid(grps, dists, stringsAsFactors = F)
View(res_sets)
abc = c(a, b)
a
attr(a)
abc
a
c(abc, a)
paste0(res_sets[,2], res_sets[,1])
paste0(res_sets[,2], res_sets[,1], c("no_cor", "mid_cor", "sev_cor"))
paste0(res_sets[,2], "_", res_sets[,1], "_". c("no_cor", "mid_cor", "sev_cor"))
paste0(res_sets[,2], "_", res_sets[,1], "_", c("no_cor", "mid_cor", "sev_cor"))
expand.grid(grps, dists, c("no_cor", "mid_cor", "sev_cor"), stringsAsFactors = F)
expand.grid(c("no_cor", "mid_cor", "sev_cor"), grps, dists, stringsAsFactors = F)
names_sets = expand.grid(c("no_cor", "mid_cor", "sev_cor"), grps, dists, stringsAsFactors = F)
paste0(names_sets[,3], "_", names_sets[,2], "_", names_sets[,1])
rm(list = ls())
load("norm_results.RData")
res_sets = expand.grid(grps, dists, stringsAsFactors = F)
res_sets
dists = c("norm", "pois", "beta", "binom")
grps = c(1:4)
res_sets = expand.grid(grps, dists, stringsAsFactors = F)
res_sets
names_sets = expand.grid(c("no_cor", "mid_cor", "sev_cor"), grps, dists, stringsAsFactors = F)
names_list = paste0(names_sets[,3], "_", names_sets[,2], "_", names_sets[,1])
names_list
rm(list = ls())
library(car)
library(ggplot2)
library(ggpubr)
dists = c("norm", "pois", "beta", "binom")
grps = c(1:4)
res_sets = expand.grid(grps, dists, stringsAsFactors = F)
names_sets = expand.grid(c("no_cor", "mid_cor", "sev_cor"), grps, dists, stringsAsFactors = F)
names_list = paste0(names_sets[,3], "_", names_sets[,2], "_", names_sets[,1])
i = 4
# grp 1, 2, 3, 4
load(paste0(res_sets[i,2], "_results.RData"))
# grp 1, 2, 3, 4
load(paste0("weighted_", res_sets[i,2], "_results.RData"))
# grp 1, 2, 3, 4
load(paste0("Results/weighted_", res_sets[i,2], "_results.RData"))
names_list
i = 7
j = 1
dat = results[[j]]
dat_1 = subset(dat, grp == res_sets[i,1])
val = c(dat_1$wald, dat_1$anv, dat_1$maxt)
dat_11 = as.data.frame(rbind(dat_1[,c(1:3)], dat_1[,c(1:3)], dat_1[,c(1:3)]))
dat_11$val = val
dat_11$typ = rep(c("Wald", "ANOVA", "MCTP"), each = nrow(dat_1))
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(dat_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 2 samples", x = "Clustersize", y = "Type-I error")
p2 = ggplot(data = subset(dat_11, nn == 3))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 3 samples", x = "Clustersize", y = "Type-I error")
p3 = ggplot(data = subset(dat_11, nn == 4))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 4 samples", x = "Clustersize", y = "Type-I error")
p4 = ggplot(data = subset(dat_11, nn == 5))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 5 samples", x = "Clustersize", y = "Type-I error")
p_dat_11 = ggarrange(p1, p2, p3, p4, ncol=2, nrow=2, common.legend = TRUE, legend="right")
p_dat_11
subset(dat_11, nn == 2)
names_list
i = 6
p1 = ggplot(data = subset(dat_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 2 samples", x = "Clustersize", y = "Type-I error")
p2 = ggplot(data = subset(dat_11, nn == 3))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 3 samples", x = "Clustersize", y = "Type-I error")
p3 = ggplot(data = subset(dat_11, nn == 4))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 4 samples", x = "Clustersize", y = "Type-I error")
p4 = ggplot(data = subset(dat_11, nn == 5))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 5 samples", x = "Clustersize", y = "Type-I error")
p_dat_11 = ggarrange(p1, p2, p3, p4, ncol=2, nrow=2, common.legend = TRUE, legend="right")
p_dat_11
# grp 1, 2, 3, 4
load(paste0("Results/weighted_", res_sets[i,2], "_results.RData"))
dat = results[[j]]
dat_1 = subset(dat, grp == res_sets[i,1])
val = c(dat_1$wald, dat_1$anv, dat_1$maxt)
dat_11 = as.data.frame(rbind(dat_1[,c(1:3)], dat_1[,c(1:3)], dat_1[,c(1:3)]))
dat_11$val = val
dat_11$typ = rep(c("Wald", "ANOVA", "MCTP"), each = nrow(dat_1))
# nn= 2, 3, 4, 5
p1 = ggplot(data = subset(dat_11, nn == 2))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 2 samples", x = "Clustersize", y = "Type-I error")
p2 = ggplot(data = subset(dat_11, nn == 3))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 3 samples", x = "Clustersize", y = "Type-I error")
p3 = ggplot(data = subset(dat_11, nn == 4))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 4 samples", x = "Clustersize", y = "Type-I error")
p4 = ggplot(data = subset(dat_11, nn == 5))  +
geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = typ), size = 1) +
#geom_line(aes(x = m_ij, y = val, colour = as.factor(n_i), linetype = "dashed"))+
scale_colour_discrete(name = "Sample Size") +
scale_linetype_discrete(name = "Procedure") +
labs(title ="Type-I Error for 5 samples", x = "Clustersize", y = "Type-I error")
p_dat_11 = ggarrange(p1, p2, p3, p4, ncol=2, nrow=2, common.legend = TRUE, legend="right")
p_dat_11
# number of Samples nn = 3, 5, 10, 25
# Identical Sample Size n_i = 3, 5, 10, 15, 25, 50, 100, 1000
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
# One Large, One Small Sample n_i = 10, 15, 25, 50; n_j = 3; n_k = 150
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
## no groups max 5
## min number cluster 8
# number of samples
nn = c(2, 3, 4, 5)
each_s = c(F, T)
both_s = c(F, T)
# Identical Sample Sizes --------------------------------------------------
n_i = c(12, 15, 20)
# Identical Cluster Size
m_ij = c(3:15)
nm_1 = expand.grid(nn, n_i, m_ij)
nm_1$each_s = F
nm_1$both_s = F
nm_1$identical_s = T
nm_1$identical_c = T
nm_1$grp = 1
colnames(nm_1)[1:3] = c("nn", "n_i", "m_ij")
# Large/Small Cluster
m_ij = c(5:10)
nm_2 = expand.grid(nn, n_i, m_ij, each_s, both_s)
nm_2$identical_s = T
nm_2$identical_c = F
colnames(nm_2)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
# Remove invalid condition
#nm_2 = nm_2[-which(which(nm_2$each_s == T) %in% which(nm_2$both_s == F)),]
nm_2$grp = 2
# Large/Small Sample Size -------------------------------------------------
n_i = c(12, 15, 20)
# Identical Cluster Size
m_ij = c(3:15)
nm_3 = expand.grid(nn, n_i, m_ij)
nm_3$each_s = F
nm_3$both_s = F
nm_3$identical_s = F
nm_3$identical_c = T
nm_3$grp = 3
colnames(nm_3)[1:3] = c("nn", "n_i", "m_ij")
# Large/Small Cluster
m_ij = c(5:10)
nm_4 = expand.grid(nn, n_i, m_ij, each_s, both_s)
nm_4$identical_s = F
nm_4$identical_c = F
colnames(nm_4)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
#nm_4 = nm_4[-which(which(nm_4$each_s == T) %in% which(nm_4$both_s == F)),]
nm_4$grp = 4
# Bind --------------------------------------------------------------------
samples = rbind(nm_1, nm_2, nm_3, nm_4)
rem_ind = intersect(which(samples$each_s == T), which(samples$both_s ==F))
samples = samples[-rem_ind,]
rm(nm_1, nm_2, nm_3, nm_4, both_s, each_s, m_ij, n_i, nn)
# number of Samples nn = 3, 5, 10, 25
# Identical Sample Size n_i = 3, 5, 10, 15, 25, 50, 100, 1000
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
# One Large, One Small Sample n_i = 10, 15, 25, 50; n_j = 3; n_k = 150
# Identical Cluster Size m_ij = 3, 5, 10, 15, 20, 25, 40
# One Large, One Small Cluster m_ij = 10, 15, 20, 25; m_ik = 3; m_ih = 40
# number of samples
# nn = c(3, 5, 10)
# each_s = c(F, T)
# both_s = c(F, T)
#
# # Identical Sample Sizes --------------------------------------------------
#     n_i = c(3, 5, 10, 15, 25)
#
#   # Identical Cluster Size
#
#       m_ij = c(3, 5, 10, 15)
#       nm_1 = expand.grid(nn, n_i, m_ij)
#       nm_1$each_s = F
#       nm_1$both_s = F
#       nm_1$identical_s = T
#       nm_1$identical_c = T
#       nm_1$grp = 1
#       colnames(nm_1)[1:3] = c("nn", "n_i", "m_ij")
#
#   # Large/Small Cluster
#       m_ij = c(5, 10)
#       nm_2 = expand.grid(nn, n_i, m_ij, each_s, both_s)
#       nm_2$identical_s = T
#       nm_2$identical_c = F
#       colnames(nm_2)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
#       # Remove invalid condition
#       #nm_2 = nm_2[-which(which(nm_2$each_s == T) %in% which(nm_2$both_s == F)),]
#       nm_2$grp = 2
#
#
# # Large/Small Sample Size -------------------------------------------------
#
#     n_i = c(5, 10, 15)
#
#   # Identical Cluster Size
#
#       m_ij = c(3, 5, 10, 15)
#       nm_3 = expand.grid(nn, n_i, m_ij)
#       nm_3$each_s = F
#       nm_3$both_s = F
#       nm_3$identical_s = F
#       nm_3$identical_c = T
#       nm_3$grp = 3
#       colnames(nm_3)[1:3] = c("nn", "n_i", "m_ij")
#
#   # Large/Small Cluster
#       m_ij = c(5, 10)
#       nm_4 = expand.grid(nn, n_i, m_ij, each_s, both_s)
#       nm_4$identical_s = F
#       nm_4$identical_c = F
#       colnames(nm_4)[1:5] = c("nn", "n_i", "m_ij", "each_s", "both_s")
#       #nm_4 = nm_4[-which(which(nm_4$each_s == T) %in% which(nm_4$both_s == F)),]
#       nm_4$grp = 4
#
#
# # Bind --------------------------------------------------------------------
#
#     samples = rbind(nm_1, nm_2, nm_3, nm_4)
#       rem_ind = intersect(which(samples$each_s == T), which(samples$both_s ==F))
#
#       samples = samples[-rem_ind,]
#
# rm(nm_1, nm_2, nm_3, nm_4, both_s, each_s, m_ij, n_i, nn)
samples[which(samples$grp %in% c(3,4))]
samples[which(samples$grp %in% c(3,4)),]
sam_n = samples[which(samples$grp %in% c(3,4)),]
View(sam_n)
unique(sam_n$each_s)
unique(sam_n$both_s)
8:(8-3)
min(samples$n_i)
c(8:(8-3), 100, 8:(8+3))
